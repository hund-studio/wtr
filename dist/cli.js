#!/usr/bin/env node

(()=>{"use strict";var e={81:e=>{e.exports=require("child_process")}},t={};function r(s){var n=t[s];if(void 0!==n)return n.exports;var o=t[s]={exports:{}};return e[s](o,o.exports,r),o.exports}r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var s in t)r.o(t,s)&&!r.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{require("dotenv/config");const e=require("fs"),t=require("cli-loading-animation"),s=require("webpack-merge"),n=require("path");var o=r(81);const i=require("tsconfig-paths-webpack-plugin"),a=require("webpack"),l=require("app-root-path");var p=r.n(l);const c=require("chalk");var u=r.n(c);const d=require("cli-spinners");var g=r.n(d);const h=require("mini-css-extract-plugin");var m=r.n(h);const v=require("webpack-dev-server");var w=r.n(v);const f=e=>{x.stop&&x.stop();const{start:r,stop:s}=(0,t.loading)(u().magenta((e=>{switch(e){case"initialization":return"Setting up boilerplate...";case"configuration":return"Installing required packages...";case"compilation":return"Generating WP compiler...";case"serving":return"Server started at http://localhost:9000 ...";case"bundling":return"Generating WP assets...";case"waiting":return"Waiting for file changes..."}})(e)),{clearOnEnd:!0,spinner:g().dots});x.current=e,x.start=r,x.stop=s,x.start()},b=()=>{x.stop&&x.stop()},x={current:null,trigger:f,terminate:b};if("init"===process.argv[2]){f("initialization"),(0,e.cpSync)((0,n.resolve)(p().path,"node_modules/@hund-ernesto/wtr/init"),(0,n.resolve)(process.cwd(),"website"),{recursive:!0}),process.chdir((0,n.resolve)(process.cwd(),"website")),f("configuration");const{spawnSync:t}=r(81);0===t("npm",["install"],{stdio:"inherit"}).status?0===t("npm",["run","build"],{stdio:"inherit"}).status?(b(),console.log(u().blue("Initialization completed, you are ready to go!")),process.exit()):(console.error("Error running npm run build"),process.exit(1)):(console.error("Error running npm install"),process.exit(1))}const y=process.env.WP_HOST;if(!y)throw new Error("undefined-env-wp_host");const O="start"===process.argv[2],_=O||"dev"===process.argv[2],P={mode:_?"development":"production",devtool:_?"inline-source-map":"source-map",module:{rules:[{test:/\.tsx?$/,use:[{loader:"ts-loader",options:{transpileOnly:!0}}],exclude:/node_modules\/(?!@hund-ernesto\/wtr)/},{test:/\.scss$/,use:[m().loader,"css-loader","sass-loader"]},{test:/\.(png|svg|jpg|jpeg|gif)$/i,type:"asset/resource",generator:{filename:"assets/images/[name][ext]"}},{test:/\.(woff|woff2|eot|ttf|otf)$/i,type:"asset/resource",generator:{filename:"assets/fonts/[name][ext]"}}]},resolve:{extensions:["",".tsx",".ts",".js",".jsx",".css",".scss"],modules:["node_modules"],alias:{"@":p().path},plugins:[new i.TsconfigPathsPlugin({configFile:(0,n.resolve)(p().path,"tsconfig.json"),extensions:[".ts",".js"]})]},plugins:[new a.DefinePlugin({MODE:JSON.stringify(O?"serve":_?"watch":"build"),PROJECT:JSON.stringify(p().path),CORE_WP:JSON.stringify((0,n.resolve)(p().path,"node_modules/@hund-ernesto/wtr")),WP_HOST:JSON.stringify(y)}),new(m())({})],output:{publicPath:"/wp-content/themes/wp-theme/dist/"},optimization:{splitChunks:{cacheGroups:{styles:{name:"main",type:"css/mini-extract",chunks:"all",enforce:!0}}}}},k=(e,t)=>{if(e||t?.hasErrors())return x.terminate(),void console.error(u().red("WP Compiler bundle failed due to an unknown error"))},q=(0,a.webpack)((0,s.merge)(P,{target:"web",entry:{main:(0,n.resolve)(p().path,"node_modules/@hund-ernesto/wtr/src/bundle.tsx")},output:{filename:"[name].js",path:(0,n.resolve)(p().path,"_out/wp-theme/dist"),clean:!0,publicPath:O?"/":void 0},infrastructureLogging:{level:"error"},stats:"none"})),S=new(w())({static:[(0,n.resolve)(p().path,"node_modules/@hund-ernesto/wtr/server"),(0,n.resolve)(p().path,"_out/wp-theme/dist")],compress:!0,port:9e3,historyApiFallback:!0},q),j=(0,a.webpack)((0,s.merge)(P,{target:"node",entry:{index:(0,n.resolve)(p().path,"node_modules/@hund-ernesto/wtr/src/compiler.tsx")},output:{filename:"[name].js",path:(0,n.resolve)(p().path,".compiler"),clean:!0}}));x.trigger("compilation"),O?(x.trigger("serving"),S.start()):_?j.watch({},k):j.run(k),j.hooks.done.tap("DoneMessage",(async e=>{x.stop?.(),await new Promise(((e,t)=>{const r=(0,n.resolve)(p().path,"./.compiler/index.js"),s=(0,o.spawn)("node",[r]);let i=[];s.stdout.on("data",(e=>{if(e){const t=e.toString().trim();i.push(u().white(t))}})),s.stderr.on("data",(e=>{if(e){const t=e.toString().trim();i.push(u().red(t))}})),s.on("close",(r=>{i.length?i=[u().green("✓ Application rendered the following LOGS"),...i,u().green("↥ Application LOG END")]:i.push(u().green("✓ Application rendered without LOGS")),console.log(i.join("\n")),0===r?e():t(`Compilation failed with exit code ${r}`)}))})),x.trigger("bundling"),q.run(k),q.hooks.done.tap("DoneMessage",(async e=>{x.stop?.(),_?x.trigger("waiting"):console.log(u().green("✓ Compilation completed, you are ready to go!"))}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,