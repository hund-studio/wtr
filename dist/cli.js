#!/usr/bin/env node

(()=>{"use strict";var e={n:t=>{var o=t&&t.__esModule?()=>t.default:()=>t;return e.d(o,{a:o}),o},d:(t,o)=>{for(var n in o)e.o(o,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:o[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};require("dotenv/config");const t=require("webpack-merge"),o=require("path"),n=require("child_process"),s=require("tsconfig-paths-webpack-plugin"),r=require("webpack"),a=require("app-root-path");var i=e.n(a);const l=require("chalk");var c=e.n(l);const p=require("cli-spinners");var u=e.n(p);const d=require("cli-loading-animation"),g=require("mini-css-extract-plugin");var m=e.n(g);const h=process.env.WP_HOST;if(!h)throw new Error("undefined-env-wp_host");const w="dev"===process.argv[2],f={current:null,trigger:e=>{f.stop&&f.stop();const{start:t,stop:o}=(0,d.loading)(c().magenta((e=>{switch(e){case"compilation":return"Generating WP compiler...";case"bundling":return"Generating WP assets...";case"waiting":return"Compilation completed, waiting for file changes..."}})(e)),{clearOnEnd:!0,spinner:u().dots});f.current=e,f.start=t,f.stop=o,f.start()},terminate:()=>{f.stop&&f.stop()}},v={mode:w?"development":"production",devtool:w?"inline-source-map":"source-map",module:{rules:[{test:/\.tsx?$/,use:[{loader:"ts-loader",options:{transpileOnly:!0}}],exclude:/node_modules\/(?!@hund-ernesto\/wtr)/},{test:/\.scss$/,use:[m().loader,"css-loader","sass-loader"]},{test:/\.(png|svg|jpg|jpeg|gif)$/i,type:"asset/resource",generator:{filename:"assets/images/[name][ext]"}},{test:/\.(woff|woff2|eot|ttf|otf)$/i,type:"asset/resource",generator:{filename:"assets/fonts/[name][ext]"}}]},resolve:{extensions:["",".tsx",".ts",".js",".jsx",".css",".scss"],modules:["node_modules"],alias:{"@":i().path},plugins:[new s.TsconfigPathsPlugin({configFile:(0,o.resolve)(i().path,"tsconfig.json"),extensions:[".ts",".js"]})]},plugins:[new r.DefinePlugin({PROJECT:JSON.stringify(i().path),CORE_WP:JSON.stringify((0,o.resolve)(i().path,"node_modules/@hund-ernesto/wtr")),WP_HOST:JSON.stringify(h)}),new(m())({})],output:{publicPath:"/wp-content/themes/wp-theme/dist/"},optimization:{splitChunks:{cacheGroups:{styles:{name:"main",type:"css/mini-extract",chunks:"all",enforce:!0}}}}},y=(e,t)=>{if(e||t?.hasErrors())return f.terminate(),void console.error(c().red("WP Compiler bundle failed due to an unknown error"))},b=(0,r.webpack)((0,t.merge)(v,{target:"web",entry:{main:(0,o.resolve)(i().path,"node_modules/@hund-ernesto/wtr/src/bundle.tsx")},output:{filename:"[name].js",path:(0,o.resolve)(i().path,"_out/wp-theme/dist"),clean:!0}})),x=(0,r.webpack)((0,t.merge)(v,{target:"node",entry:{index:(0,o.resolve)(i().path,"node_modules/@hund-ernesto/wtr/src/compiler.tsx")},output:{filename:"[name].js",path:(0,o.resolve)(i().path,".compiler"),clean:!0}}));f.trigger("compilation"),w?x.watch({},y):x.run(y),x.hooks.done.tap("DoneMessage",(async e=>{f.stop?.(),await new Promise(((e,t)=>{console.log(c().magenta("=== Compilation LOG ===")),console.log(c().magenta());const s=(0,o.resolve)(i().path,"./.compiler/index.js"),r=(0,n.spawn)("node",[s]);r.stdout.on("data",(e=>{console.log(c().white(e))})),r.stderr.on("data",(e=>{console.error(c().red(e))})),r.on("close",(o=>{console.log(c().magenta()),console.log(c().magenta("=== LOG END ===")),console.log(c().magenta()),0===o?e():t(`Compilation failed with exit code ${o}`)}))})),f.trigger("bundling"),b.run(y),b.hooks.done.tap("DoneMessage",(async e=>{f.stop?.(),w?f.trigger("waiting"):console.log(c().blue("Compilation completed, you are ready to go!"))}))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,